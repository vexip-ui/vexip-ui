@use 'sass:map';

@use './shared' as *;
@use './design' as *;

$tree: () !default;
$tree: map.merge(
  (
    label-color: inherit,
    label-color-hover: get-css-var('tree-label-color'),
    label-color-focus: get-css-var('tree-label-color-hover'),
    label-color-selected: get-css-var('tree-label-color-hover'),
    label-color-secondary: get-css-var('content-color-secondary'),
    label-color-disabled: get-css-var('content-color-disabled'),
    label-color-readonly: get-css-var('tree-label-color'),
    label-bg-color: transparent,
    label-bg-color-hover: get-css-var('color-primary-opacity-8'),
    label-bg-color-focus: get-css-var('tree-label-bg-color-hover'),
    label-bg-color-selected: get-css-var('color-primary-opacity-6'),
    label-bg-color-disabled: get-css-var('tree-label-bg-color'),
    label-bg-color-readonly: get-css-var('tree-label-bg-color'),
    label-radius: get-css-var('radius-base'),
    node-span: 6px,
    arrow-size: 22px,
    arrow-color: inherit,
    arrow-color-disabled: get-css-var('content-color-disabled'),
    indicator-color: get-css-var('color-primary-base'),
    indent-width: 16px,
    deepth: -1,
    link-line-type: 'dashed',
    link-line-color: get-css-var('border-color-base')
  ),
  $tree
);

.#{$namespace}-tree {
  &-vars {
    @include define-preset-values('tree', $tree);
  }

  @include basis;

  position: relative;

  $arrow: get-css-var('tree-arrow-size');
  $indent: get-css-var('tree-indent-width');
  $depth: get-css-var('tree-depth');
  $link-line: 1px get-css-var('tree-link-line-type') get-css-var('tree-link-line-color');

  &__list,
  &__node {
    list-style: none;

    &--link-line {
      position: relative;

      &::before {
        position: absolute;
        top: 0;
        bottom: 0;
        inset-inline-start: calc(#{$arrow} * 0.5 + #{$indent} * (#{$depth} - 1) - 1px);
        pointer-events: none;
        content: '';
        border-inline-start: $link-line;
      }
    }
  }

  &__list {
    padding: 0;
    margin: 0;
  }

  &__node {
    padding-top: get-css-var('tree-node-span');
    outline: 0;

    &--link-line {
      &::after {
        position: absolute;
        bottom: calc(50% - #{get-css-var('tree-node-span')});
        inset-inline-start: calc(#{$arrow} * 0.5 + #{$indent} * (#{$depth} - 1) - 1px);
        width: calc(#{$indent} * 0.5);
        pointer-events: none;
        content: '';
        border-bottom: $link-line;
      }
    }

    &--last {
      &::before {
        bottom: calc(50% - #{get-css-var('tree-node-span')});
      }
    }

    &--no-arrow {
      &::after {
        width: calc(#{$indent} * 0.5 + #{$arrow});
      }
    }
  }

  &__content {
    display: flex;
    align-items: center;
    padding-inline-start: calc(#{$depth} * #{$indent});
  }

  &__label {
    display: inline-block;
    flex-grow: 1;
    padding: 0 4px;
    color: get-css-var('tree-label-color');
    cursor: pointer;
    background-color: get-css-var('tree-label-bg-color');
    border-radius: get-css-var('tree-label-radius');
    transition: get-css-var('transition-color'), get-css-var('transition-background');

    &:hover {
      color: get-css-var('tree-label-color-hover');
      background-color: get-css-var('tree-label-bg-color-hover');
    }

    &--focused {
      color: get-css-var('tree-label-color-focus');
      background-color: get-css-var('tree-label-bg-color-focus');
    }

    &--selected,
    &--selected:hover {
      color: get-css-var('tree-label-color-selected');
      background-color: get-css-var('tree-label-bg-color-selected');
    }

    &--secondary,
    &--secondary:hover {
      color: get-css-var('tree-label-color-secondary');
    }

    &--disabled,
    &--disabled:hover {
      color: get-css-var('tree-label-color-disabled');
      cursor: default;
      background-color: get-css-var('tree-label-bg-color-disabled');
    }

    &--readonly,
    &--readonly:hover {
      color: get-css-var('tree-label-color-readonly');
      cursor: default;
      background-color: get-css-var('tree-label-bg-color-readonly');
    }

    &--is-floor,
    &--is-floor:hover {
      cursor: pointer;
    }
  }

  &__arrow {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: get-css-var('tree-arrow-size');
    height: get-css-var('tree-arrow-size');
    margin-inline-end: 3px;
    color: get-css-var('tree-arrow-color');
    cursor: pointer;
    transition: get-css-var('transition-color');

    &--transparent {
      visibility: hidden;
      opacity: 0%;
    }

    &--expanded .#{$namespace}-icon {
      transform: rotate(90deg);
    }

    &--disabled {
      color: get-css-var('tree-arrow-color-disabled');
      cursor: not-allowed;
    }
  }

  &__checkbox {
    display: inline-flex;
    margin-inline-end: 6px;

    &--suffix {
      margin-inline-start: 6px;
      margin-inline-end: 0;
    }
  }

  &__indicator {
    position: absolute;
    right: 0;
    left: 0;
    height: 1px;
    will-change: top, left;
    background-color: get-css-var('tree-indicator-color');
  }
}
