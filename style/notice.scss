@use 'sass:map';

@use './design' as *;
@use './icon.scss';
@use './popup.scss';

$notice: () !default;
$notice: map.merge(
  (
    color: inherit,
    bg-color: get-css-var('bg-color-base'),
    b-color: transparent,
    border: get-css-var('border-shape') get-css-var('notice-b-color'),
    radius: get-css-var('border-radius-base'),
    s-color: get-css-var('shadow-color-base'),
    shadow: get-css-var('shadow-shape') get-css-var('notice-s-color'),
    v-padding: 0.8em,
    h-padding: 1.2em,
    mask-bg-color: transparent,
    padding: get-css-var('notice-v-padding') get-css-var('notice-h-padding'),
    title-font-size: get-css-var('font-size-primary'),
    title-color: get-css-var('content-color-primary'),
    icon-color: get-css-var('notice-color'),
    close-color: get-css-var('content-color-placeholder'),
    close-color-hover: get-css-var('content-color-base'),
    marker-bg-color: get-css-var('fill-color-secondary')
  ),
  $notice
);

.vxp-notice {
  &-vars {
    @include define-preset-values('notice', $notice);
  }

  @mixin define-notice-style($style-map) {
    @include define-preset-style('notice', $style-map);
  }

  @include basis;

  $title: #{&}__title;
  $icon: #{&}__icon;
  $close: #{&}__close;

  &__title {
    position: relative;
    margin-bottom: 0.2em;
    font-size: get-css-var('notice-title-font-size');
    color: get-css-var('notice-title-color');
  }

  &__content {
    position: relative;
    color: get-css-var('notice-color');
  }

  &__icon {
    position: absolute;
    top: 1.4em;
    left: 1.8em;
    display: flex;
    align-items: center;
    color: get-css-var('notice-icon-color');
    transform: scale(2);
  }

  &__close {
    position: absolute;
    top: 0.4em;
    right: 0.6em;
    display: flex;
    align-items: center;
    color: get-css-var('notice-close-color');
    cursor: pointer;
    transition: get-css-var('transition-color');

    &:hover {
      color: get-css-var('notice-close-color-hover');
    }
  }

  &__item {
    display: flex;
    flex-direction: column;
    width: 24em;
    padding: get-css-var('notice-padding');
    color: get-css-var('notice-color');
    background-color: get-css-var('notice-bg-color');
    border: get-css-var('notice-border');
    border-radius: get-css-var('notice-radius');
    box-shadow: get-css-var('notice-shadow');

    &--has-icon {
      padding-left: 4.2em;
    }

    &--title-only {
      flex-direction: row;

      #{$title} {
        margin: 0;
      }

      #{$icon} {
        position: relative;
        top: auto;
        left: auto;
        display: flex;
        align-items: center;
        margin-right: 0.5em;
        transform: scale(1.2);
      }

      #{$close} {
        top: 50%;
        right: 1em;
        transform: translateY(-50%);
      }
    }

    &--has-icon#{&}--title-only {
      padding: get-css-var('notice-padding');
    }

    &--content-only {
      min-height: 5em;
    }

    &::before {
      @include inner-fixed;

      pointer-events: none;
      background-color: get-css-var('notice-mask-bg-color');
      border-radius: get-css-var('notice-radius');
      opacity: 80%;
    }

    &::after {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: 5px;
      background-color: get-css-var('notice-marker-bg-color');
      border-radius: get-css-var('notice-radius') 0 0 get-css-var('notice-radius');
    }

    &--background::before {
      content: '';
    }

    &--marker::after {
      content: '';
    }

    $types: info success warning error;

    @each $type in $types {
      $color: if($type == 'info', 'primary', $type);

      &--color-only#{&}--#{$type} {
        @include define-notice-style((
          title-color: 'color' $color 'dark-1',
          color: 'color' $color 'base',
          close-color: 'color' $color 'opacity-5',
          close-color-hover: 'color' $color 'base'
        ));
      }

      &--background#{&}--#{$type} {
        @include define-notice-style((
          b-color: 'color' $color 'opacity-5',
          mask-bg-color: 'color' $color 'opacity-9',
          shadow: unset,
          close-color: 'color' $color 'opacity-7',
          close-color-hover: 'color' $color 'opacity-2'
        ));
      }

      &--background#{&}--color#{&}--#{$type} {
        @include define-notice-style((
          title-color: 'color' $color 'dark-2',
          color: 'color' $color 'dark-2',
          icon-color: 'color' $color 'dark-1',
          marker-bg-color: 'color' $color 'dark-1'
        ));
      }

      &--#{$type} {
        @include define-notice-style((
          icon-color: 'color' $color 'base',
          marker-bg-color: 'color' $color 'base'
        ));
      }
    }
  }
}
