@use 'sass:map';

@use './design' as *;
@use './icon.scss';

$switcher: () !default;
$switcher: map.merge(
  (
    bg-color: get-css-var('fill-color-secondary'),
    bg-color-open: get-css-var('color-primary-base'),
    bg-color-disabled: get-css-var('fill-color-disabled'),
    opacity-disabled: 60%,
    opacity-loading: get-css-var('switcher-opacity-disabled'),
    s-color-focus: get-css-var('color-primary-opacity-6'),
    shadow-focus: get-css-var('shadow-focus') get-css-var('switcher-s-color-focus'),
    label-color: get-css-var('color-white'),
    small-height: 18px,
    default-height: 22px,
    large-height: 26px,
    signal-bg-color: get-css-var('color-white'),
    signal-b-color: get-css-var('switcher-signal-bg-color'),
    signal-b-color-disabled: get-css-var('switcher-signal-bg-color'),
    signal-border: get-css-var('border-shape') get-css-var('switcher-signal-b-color'),
    signal-small-size: calc(get-css-var('switcher-small-height') - 4px),
    signal-default-size: calc(get-css-var('switcher-default-height') - 4px),
    signal-large-size: calc(get-css-var('switcher-large-height') - 4px),
    series-span: 8px,
    icon-color: get-css-var('color-black'),
    circle-opacity: 0
  ),
  $switcher
);

.#{$namespace}-switcher {
  &-vars {
    @include define-preset-values('switcher', $switcher);
  }

  @mixin define-switcher-style($style-map) {
    @include define-preset-style('switcher', $style-map);
  }

  @include basis;

  position: relative;
  display: inline-flex;
  cursor: pointer;
  user-select: none;
  background-color: get-css-var('switcher-bg-color');
  border-radius: 30px;
  transition:
    get-css-var('transition-background'),
    get-css-var('transition-border'),
    get-css-var('transition-shadow'),
    get-css-var('transition-opacity');

  & + & {
    margin-left: get-css-var('switcher-series-span');
  }

  &:focus-within {
    box-shadow: get-css-var('switcher-shadow-focus');
  }

  &--loading {
    cursor: default;
    opacity: get-css-var('switcher-opacity-loading');
  }

  &--open {
    background-color: get-css-var('switcher-bg-color-open');
  }

  $height-s: get-css-var('switcher-small-height');
  $height: get-css-var('switcher-default-height');
  $height-l: get-css-var('switcher-large-height');
  $signal-s: get-css-var('switcher-signal-small-size');
  $signal: get-css-var('switcher-signal-default-size');
  $signal-l: get-css-var('switcher-signal-large-size');

  &__label {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: calc(#{$height} * 2);
    height: $height;
    padding-right: calc(#{$height} * 0.5 - 1px);
    padding-left: calc(#{$height} + 2px);
    line-height: 1;
    color: get-css-var('switcher-label-color');
    border-radius: $height;
    transition: padding get-css-var('transition-base');
  }

  &--open &__label {
    padding-right: calc(#{$height} + 2px);
    padding-left: calc(#{$height} * 0.5 - 1px);
  }

  &__signal {
    position: absolute;
    top: 50%;
    left: calc((#{$height} - #{$signal}) * 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    width: $signal;
    height: $signal;
    background-color: get-css-var('switcher-signal-bg-color');
    border-radius: 50%;
    transition:
      left get-css-var('transition-base'),
      // width get-css-var('transition-base'),
      get-css-var('transition-transform');
    transform: translateY(-50%);

    &::after {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 60%;
      height: 60%;
      content: '';
      border: get-css-var('switcher-signal-border');
      border-radius: 50%;
      opacity: get-css-var('switcher-circle-opacity');
      transition: get-css-var('transition-border');
      transform: translate(-50%, -50%);
    }

    .#{$namespace}-icon {
      color: get-css-var('switcher-icon-color');
    }
  }

  $states: success, error, warning;

  @each $state in $states {
    &--#{$state} {
      @include define-switcher-style(
        (
          bg-color: 'color' $state 'light-1',
          bg-color-open: 'color' $state 'light-1',
          s-color-focus: 'color' $state 'opacity-6',
          signal-b-color: 'color' $state 'base',
          circle-opacity: 80%
        )
      );
    }
  }

  &--open &__signal {
    left: calc(100% - (#{$height} - #{$signal}) * 0.5);
    transform: translate(-100%, -50%);
  }

  &--small &__label {
    min-width: calc(#{$height-s} * 2);
    height: $height-s;
    padding-right: calc(#{$height-s} * 0.5 - 1px);
    padding-left: calc(#{$height-s} + 2px);
  }

  &--small#{&}--open &__label {
    padding-right: calc(#{$height-s} + 2px);
    padding-left: calc(#{$height-s} * 0.5 - 1px);
  }

  &--small &__signal {
    left: calc((#{$height-s} - #{$signal-s}) * 0.5);
    width: $signal-s;
    height: $signal-s;
  }

  &--small#{&}--open &__signal {
    left: calc(100% - (#{$height-s} - #{$signal-s}) * 0.5);
  }

  &--large &__label {
    min-width: calc(#{$height-l} * 2);
    height: $height-l;
    padding-right: calc(#{$height-l} * 0.5 - 1px);
    padding-left: calc(#{$height-l} + 2px);
  }

  &--large#{&}--open &__label {
    padding-right: calc(#{$height-l} + 2px);
    padding-left: calc(#{$height-l} * 0.5 - 1px);
  }

  &--large &__signal {
    left: calc((#{$height-l} - #{$signal-l}) * 0.5);
    width: $signal-l;
    height: $signal-l;
  }

  &--large#{&}--open &__signal {
    left: calc(100% - (#{$height-l} - #{$signal-l}) * 0.5);
  }

  &--disabled {
    cursor: not-allowed;
    background-color: get-css-var('switcher-bg-color-disabled');
    opacity: get-css-var('switcher-opacity-disabled');
  }

  &--disabled &__signal {
    pointer-events: none;

    &::after {
      border-color: get-css-var('switcher-signal-b-color-disabled');
    }
  }

  &__input {
    width: 0;
    height: 0;
    margin: 0;
    pointer-events: none;
    opacity: 0%;
  }
}
