@use 'sass:map';

@use '../design' as *;

$option: () !default;
$option: map.merge(
  (
    color: get-css-var('content-color-normal'),
    color-hitting: get-css-var('color-primary-base'),
    color-selected: get-css-var('color-primary-base'),
    color-disabled: get-css-var('fill-color-disabled'),
    color-bg: get-css-var('fill-color-base'),
    color-bg-hover: get-css-var('fill-color-hover'),
    color-bg-selected: get-css-var('option-color-bg-hover'),
    color-divider: get-css-var('border-color-light-2'),
    divider: get-css-var('border-appearance') get-css-var('option-color-divider'),
    color-group: get-css-var('content-color-secondary'),
    font-size-group: get-css-var('font-size-secondary'),
    label-vertical-padding: 0.35em,
    label-horizontal-padding: 1.2em
  ),
  $option
);

.vxp-option {
  &-vars {
    @include define-preset-values('option', $option);
  }

  @include basis;

  $label-v-padding: get-css-var('option-label-vertical-padding');
  $label-h-padding: get-css-var('option-label-horizontal-padding');
  $label-padding: $label-v-padding $label-h-padding;

  display: inline-flex;
  align-items: center;
  width: 100%;
  padding: $label-padding;
  color: get-css-var('option-color');
  white-space: nowrap;
  list-style: none;
  cursor: pointer;
  background-color: get-css-var('option-color-bg');
  transition: get-css-var('transition-color'), get-css-var('transition-background');

  &:hover {
    background-color: get-css-var('option-color-bg-hover');
  }

  &--hitting {
    color: get-css-var('option-color-hitting');
  }

  &--selected {
    color: get-css-var('option-color-selected');
    background-color: get-css-var('option-color-bg-selected');
  }

  &--disabled {
    color: get-css-var('option-color-disabled');
    cursor: not-allowed;

    &:hover {
      background-color: get-css-var('option-color-bg');
    }
  }

  &--divided {
    margin-bottom: $label-v-padding;
    border-bottom: get-css-var('option-divider');

    &::after {
      position: relative;
      bottom: calc(#{$label-v-padding} * -1);
      display: block;
      height: $label-v-padding;
      margin: 0 calc(#{$label-h-padding} * -1);
      content: '';
      background-color: get-css-var('option-color-bg');
    }
  }

  @at-root {
    &-group {
      @include basis;

      white-space: nowrap;
      list-style: none;
      user-select: none;

      &__label {
        padding: $label-padding;
        font-size: get-css-var('option-font-size-group');
        color: get-css-var('option-color-group');
      }

      &__list {
        position: relative;
        display: flex;
        flex-direction: column;
        padding: 0;
      }

      &--divided &__list {
        padding-bottom: 0.7em;

        &::after {
          position: absolute;
          right: 0;
          bottom: $label-v-padding;
          left: 0;
          display: block;
          height: 1px;
          font-size: get-css-var('option-font-size-group');
          content: '';
          background-color: get-css-var('option-color-divider');
        }
      }
    }
  }
}
